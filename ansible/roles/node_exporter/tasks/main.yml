---
- name: Create node_exporter group
  group:
    name: "{{ node_exporter_group }}"
    system: yes

- name: Create node_exporter user
  user:
    name: "{{ node_exporter_user }}"
    group: "{{ node_exporter_group }}"
    system: yes
    shell: /bin/false
    home: /var/lib/node_exporter
    create_home: no

- name: Create node_exporter directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ node_exporter_user }}"
    group: "{{ node_exporter_group }}"
    mode: '0755'
  loop:
    - /var/lib/node_exporter
    - "{{ node_exporter_textfile_dir }}"

- name: Download node_exporter
  get_url:
    url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
    dest: /tmp/node_exporter.tar.gz
    mode: '0644'

- name: Extract node_exporter
  unarchive:
    src: /tmp/node_exporter.tar.gz
    dest: /tmp
    remote_src: yes
    creates: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64"

- name: Copy node_exporter binary
  copy:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
    dest: "{{ node_exporter_binary_path }}"
    owner: root
    group: root
    mode: '0755'
    remote_src: yes

- name: Create node_exporter systemd service
  template:
    src: node_exporter.service.j2
    dest: /etc/systemd/system/node_exporter.service
    owner: root
    group: root
    mode: '0644'
  notify:
    - reload systemd
    - restart node_exporter

- name: Enable and start node_exporter service
  systemd:
    name: node_exporter
    enabled: yes
    state: started
    daemon_reload: yes

- name: Verify node_exporter is running
  uri:
    url: "http://localhost:{{ node_exporter_port }}/metrics"
    method: GET
    timeout: 10
  register: node_exporter_check
  retries: 3
  delay: 5
