---
- name: Install required packages
  apt:
    name:
      - apt-transport-https
      - software-properties-common
      - wget
    state: present
    update_cache: yes

- name: Add Grafana GPG key
  apt_key:
    url: https://apt.grafana.com/gpg.key
    state: present

- name: Add Grafana repository
  apt_repository:
    repo: "deb https://apt.grafana.com stable main"
    state: present

- name: Install Grafana
  apt:
    name: grafana
    state: present
    update_cache: yes

- name: Create grafana directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ grafana_user }}"
    group: "{{ grafana_group }}"
    mode: '0755'
  loop:
    - "{{ grafana_data_dir }}"
    - "{{ grafana_log_dir }}"
    - "{{ grafana_data_dir }}/dashboards"
    - "{{ grafana_data_dir }}/plugins"

- name: Configure Grafana
  template:
    src: grafana.ini.j2
    dest: "{{ grafana_config_dir }}/grafana.ini"
    owner: root
    group: "{{ grafana_group }}"
    mode: '0640'
  notify:
    - restart grafana

- name: Create Grafana provisioning directories
  file:
    path: "{{ grafana_config_dir }}/provisioning/{{ item }}"
    state: directory
    owner: root
    group: "{{ grafana_group }}"
    mode: '0755'
  loop:
    - datasources
    - dashboards

- name: Configure Prometheus datasource
  template:
    src: prometheus-datasource.yml.j2
    dest: "{{ grafana_config_dir }}/provisioning/datasources/prometheus.yml"
    owner: root
    group: "{{ grafana_group }}"
    mode: '0644'
  notify:
    - restart grafana

- name: Configure dashboard provider
  template:
    src: dashboard-provider.yml.j2
    dest: "{{ grafana_config_dir }}/provisioning/dashboards/default.yml"
    owner: root
    group: "{{ grafana_group }}"
    mode: '0644'
  notify:
    - restart grafana

- name: Copy Node Exporter dashboard
  copy:
    src: node-exporter-dashboard.json
    dest: "{{ grafana_data_dir }}/dashboards/node-exporter-dashboard.json"
    owner: "{{ grafana_user }}"
    group: "{{ grafana_group }}"
    mode: '0644'

- name: Enable and start Grafana service
  systemd:
    name: grafana-server
    enabled: yes
    state: started
    daemon_reload: yes

- name: Wait for Grafana to start
  wait_for:
    port: "{{ grafana_port }}"
    host: "0.0.0.0"
    delay: 10
    timeout: 60

- name: Verify Grafana is running
  uri:
    url: "http://localhost:{{ grafana_port }}/api/health"
    method: GET
    timeout: 10
  register: grafana_check
  retries: 3
  delay: 5
