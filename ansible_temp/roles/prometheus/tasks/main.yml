---
- name: Create prometheus group
  group:
    name: "{{ prometheus_group }}"
    system: yes

- name: Create prometheus user
  user:
    name: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    system: yes
    shell: /bin/false
    home: "{{ prometheus_data_dir }}"
    create_home: no

- name: Create prometheus directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: '0755'
  loop:
    - "{{ prometheus_config_dir }}"
    - "{{ prometheus_data_dir }}"
    - "{{ prometheus_config_dir }}/rules"

- name: Download prometheus
  get_url:
    url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    dest: /tmp/prometheus.tar.gz
    mode: '0644'

- name: Extract prometheus
  unarchive:
    src: /tmp/prometheus.tar.gz
    dest: /tmp
    remote_src: yes
    creates: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64"

- name: Copy prometheus binaries
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    owner: root
    group: root
    mode: '0755'
    remote_src: yes
  loop:
    - prometheus
    - promtool

- name: Copy prometheus console files
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}"
    dest: "{{ prometheus_config_dir }}/{{ item }}"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: '0644'
    remote_src: yes
  loop:
    - consoles
    - console_libraries

- name: Create prometheus configuration
  template:
    src: prometheus.yml.j2
    dest: "{{ prometheus_config_dir }}/prometheus.yml"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: '0644'
  notify:
    - restart prometheus

- name: Create prometheus systemd service
  template:
    src: prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
    owner: root
    group: root
    mode: '0644'
  notify:
    - reload systemd
    - restart prometheus

- name: Enable and start prometheus service
  systemd:
    name: prometheus
    enabled: yes
    state: started
    daemon_reload: yes

- name: Wait for prometheus to start
  wait_for:
    port: "{{ prometheus_port }}"
    host: "0.0.0.0"
    delay: 10
    timeout: 60

- name: Verify prometheus is running
  uri:
    url: "http://localhost:{{ prometheus_port }}/-/healthy"
    method: GET
    timeout: 10
  register: prometheus_check
  retries: 3
  delay: 5
